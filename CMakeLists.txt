CMAKE_MINIMUM_REQUIRED(VERSION 3.5)
PROJECT(lane_mapping)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_BUILD_TYPE Debug)

OPTION(BUILD_UNIT_TESTS "Enable building unit tests" ON)
OPTION(BUILD_OPENGL_VIEWER "Enable Pangolin Viewer" ON)

ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/3rd/flann)

FIND_PACKAGE(Eigen3 REQUIRED)
INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIRS} ${EIGEN3_INCLUDE_DIRS}/unsupported)

FIND_PACKAGE(Boost REQUIRED COMPONENTS system filesystem thread)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
# TARGET_LINK_LIBRARIES(${Boost_LIBRARIES})

# FIND_PACKAGE(OpenCV REQUIRED)
# INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})
# # TARGET_LINK_LIBRARIES(${OpenCV_LIBS})

FIND_PACKAGE(GTSAM REQUIRED)
INCLUDE_DIRECTORIES(${GTSAM_INCLUDE_DIRS})
message(STATUS "Found GTSAM: ${GTSAM_LIBRARIES}")
# TARGET_LINK_LIBRARIES(${GTSAM_LIBRARIES})

FIND_PACKAGE(yaml-cpp REQUIRED)
INCLUDE_DIRECTORIES(${YAML_CPP_INCLUDE_DIR})

IF (BUILD_OPENGL_VIEWER)
    MESSAGE("Building Project With OpenGL Visualization")
    FIND_PACKAGE(Pangolin)
    INCLUDE_DIRECTORIES(${Pangolin_INCLUDE_DIRS})
    MESSAGE(Pangolin_LIBRARIES:${Pangolin_LIBRARIES})
    ADD_DEFINITIONS(-DVIEWER_ON)
    FILE(GLOB VISUALIZATION_SOURCES_FILES ${PROJECT_SOURCE_DIR}/src/visualization/*.cc)
ELSE()
  MESSAGE("Building Project Without OpenGL Visualization")
ENDIF()

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/3rd/flann/src/cpp)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
FILE(GLOB SOURCES_FILES ${PROJECT_SOURCE_DIR}/src/*.cc)
IF (BUILD_OPENGL_VIEWER)
  list(APPEND SOURCES_FILES ${VISUALIZATION_SOURCES_FILES})
ENDIF()


MESSAGE("PRINTING ALL INCLUDE DIRS")
GET_PROPERTY(INCLUDE_DIRS DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY INCLUDE_DIRECTORIES)
FOREACH(DIR ${INCLUDE_DIRS})
  MESSAGE(STATUS "include_dir='${DIR}'")
ENDFOREACH()

MESSAGE("PRINTING ALL LINK_DIRECTORIES")
GET_PROPERTY(LINK_DIRECTORIES DIRECTORY PROPERTY LINK_DIRECTORIES)
FOREACH(DIR ${LINK_DIRECTORIES})
  MESSAGE(STATUS "link_dir='${DIR}'")
ENDFOREACH()

ADD_LIBRARY(${PROJECT_NAME} SHARED ${SOURCES_FILES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} yaml-cpp ${Boost_LIBRARIES} gtsam flann_cpp)
IF (BUILD_OPENGL_VIEWER)
  TARGET_LINK_LIBRARIES(${PROJECT_NAME}  ${Pangolin_LIBRARIES})
ENDIF()

ADD_EXECUTABLE(lane_mapping_demo demo.cc)
TARGET_LINK_LIBRARIES(lane_mapping_demo ${PROJECT_NAME} yaml-cpp ${Boost_LIBRARIES})
IF (BUILD_OPENGL_VIEWER)
    TARGET_LINK_LIBRARIES(lane_mapping_demo ${Pangolin_LIBRARIES})
ENDIF()


IF (BUILD_UNIT_TESTS)
    MESSAGE("Building Unit Test")
    ADD_SUBDIRECTORY(${PROJECT_SOURCE_DIR}/unit_test)
ENDIF ()